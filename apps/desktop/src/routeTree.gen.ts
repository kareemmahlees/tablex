/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsLayoutRouteImport } from './routes/_settings-layout'
import { Route as IndexRouteRouteImport } from './routes/index/route'
import { Route as ConnectionConnIdTableLayoutRouteImport } from './routes/connection.$connId/_table-layout'
import { Route as SettingsLayoutSettingsPreferencesRouteRouteImport } from './routes/_settings-layout.settings/preferences/route'
import { Route as SettingsLayoutSettingsKeybindingsRouteRouteImport } from './routes/_settings-layout.settings/keybindings/route'
import { Route as ConnectionConnIdTableLayoutSqlEditorRouteRouteImport } from './routes/connection.$connId/_table-layout/sql-editor/route'
import { Route as ConnectionConnIdTableLayoutApiDocsRouteRouteImport } from './routes/connection.$connId/_table-layout/api-docs/route'
import { Route as ConnectionConnIdTableLayoutTableViewEmptyRouteRouteImport } from './routes/connection.$connId/_table-layout/table-view/empty/route'
import { Route as ConnectionConnIdTableLayoutTableViewTableNameRouteRouteImport } from './routes/connection.$connId/_table-layout/table-view/$tableName/route'

const ConnectionConnIdRouteImport = createFileRoute('/connection/$connId')()

const SettingsLayoutRoute = SettingsLayoutRouteImport.update({
  id: '/_settings-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRouteRoute = IndexRouteRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ConnectionConnIdRoute = ConnectionConnIdRouteImport.update({
  id: '/connection/$connId',
  path: '/connection/$connId',
  getParentRoute: () => rootRouteImport,
} as any)
const ConnectionConnIdTableLayoutRoute =
  ConnectionConnIdTableLayoutRouteImport.update({
    id: '/_table-layout',
    getParentRoute: () => ConnectionConnIdRoute,
  } as any)
const SettingsLayoutSettingsPreferencesRouteRoute =
  SettingsLayoutSettingsPreferencesRouteRouteImport.update({
    id: '/settings/preferences',
    path: '/settings/preferences',
    getParentRoute: () => SettingsLayoutRoute,
  } as any)
const SettingsLayoutSettingsKeybindingsRouteRoute =
  SettingsLayoutSettingsKeybindingsRouteRouteImport.update({
    id: '/settings/keybindings',
    path: '/settings/keybindings',
    getParentRoute: () => SettingsLayoutRoute,
  } as any)
const ConnectionConnIdTableLayoutSqlEditorRouteRoute =
  ConnectionConnIdTableLayoutSqlEditorRouteRouteImport.update({
    id: '/sql-editor',
    path: '/sql-editor',
    getParentRoute: () => ConnectionConnIdTableLayoutRoute,
  } as any)
const ConnectionConnIdTableLayoutApiDocsRouteRoute =
  ConnectionConnIdTableLayoutApiDocsRouteRouteImport.update({
    id: '/api-docs',
    path: '/api-docs',
    getParentRoute: () => ConnectionConnIdTableLayoutRoute,
  } as any)
const ConnectionConnIdTableLayoutTableViewEmptyRouteRoute =
  ConnectionConnIdTableLayoutTableViewEmptyRouteRouteImport.update({
    id: '/table-view/empty',
    path: '/table-view/empty',
    getParentRoute: () => ConnectionConnIdTableLayoutRoute,
  } as any)
const ConnectionConnIdTableLayoutTableViewTableNameRouteRoute =
  ConnectionConnIdTableLayoutTableViewTableNameRouteRouteImport.update({
    id: '/table-view/$tableName',
    path: '/table-view/$tableName',
    getParentRoute: () => ConnectionConnIdTableLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteRoute
  '/settings/keybindings': typeof SettingsLayoutSettingsKeybindingsRouteRoute
  '/settings/preferences': typeof SettingsLayoutSettingsPreferencesRouteRoute
  '/connection/$connId': typeof ConnectionConnIdTableLayoutRouteWithChildren
  '/connection/$connId/api-docs': typeof ConnectionConnIdTableLayoutApiDocsRouteRoute
  '/connection/$connId/sql-editor': typeof ConnectionConnIdTableLayoutSqlEditorRouteRoute
  '/connection/$connId/table-view/$tableName': typeof ConnectionConnIdTableLayoutTableViewTableNameRouteRoute
  '/connection/$connId/table-view/empty': typeof ConnectionConnIdTableLayoutTableViewEmptyRouteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRouteRoute
  '/settings/keybindings': typeof SettingsLayoutSettingsKeybindingsRouteRoute
  '/settings/preferences': typeof SettingsLayoutSettingsPreferencesRouteRoute
  '/connection/$connId': typeof ConnectionConnIdTableLayoutRouteWithChildren
  '/connection/$connId/api-docs': typeof ConnectionConnIdTableLayoutApiDocsRouteRoute
  '/connection/$connId/sql-editor': typeof ConnectionConnIdTableLayoutSqlEditorRouteRoute
  '/connection/$connId/table-view/$tableName': typeof ConnectionConnIdTableLayoutTableViewTableNameRouteRoute
  '/connection/$connId/table-view/empty': typeof ConnectionConnIdTableLayoutTableViewEmptyRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRouteRoute
  '/_settings-layout': typeof SettingsLayoutRouteWithChildren
  '/_settings-layout/settings/keybindings': typeof SettingsLayoutSettingsKeybindingsRouteRoute
  '/_settings-layout/settings/preferences': typeof SettingsLayoutSettingsPreferencesRouteRoute
  '/connection/$connId': typeof ConnectionConnIdRouteWithChildren
  '/connection/$connId/_table-layout': typeof ConnectionConnIdTableLayoutRouteWithChildren
  '/connection/$connId/_table-layout/api-docs': typeof ConnectionConnIdTableLayoutApiDocsRouteRoute
  '/connection/$connId/_table-layout/sql-editor': typeof ConnectionConnIdTableLayoutSqlEditorRouteRoute
  '/connection/$connId/_table-layout/table-view/$tableName': typeof ConnectionConnIdTableLayoutTableViewTableNameRouteRoute
  '/connection/$connId/_table-layout/table-view/empty': typeof ConnectionConnIdTableLayoutTableViewEmptyRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings/keybindings'
    | '/settings/preferences'
    | '/connection/$connId'
    | '/connection/$connId/api-docs'
    | '/connection/$connId/sql-editor'
    | '/connection/$connId/table-view/$tableName'
    | '/connection/$connId/table-view/empty'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/settings/keybindings'
    | '/settings/preferences'
    | '/connection/$connId'
    | '/connection/$connId/api-docs'
    | '/connection/$connId/sql-editor'
    | '/connection/$connId/table-view/$tableName'
    | '/connection/$connId/table-view/empty'
  id:
    | '__root__'
    | '/'
    | '/_settings-layout'
    | '/_settings-layout/settings/keybindings'
    | '/_settings-layout/settings/preferences'
    | '/connection/$connId'
    | '/connection/$connId/_table-layout'
    | '/connection/$connId/_table-layout/api-docs'
    | '/connection/$connId/_table-layout/sql-editor'
    | '/connection/$connId/_table-layout/table-view/$tableName'
    | '/connection/$connId/_table-layout/table-view/empty'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRouteRoute: typeof IndexRouteRoute
  SettingsLayoutRoute: typeof SettingsLayoutRouteWithChildren
  ConnectionConnIdRoute: typeof ConnectionConnIdRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_settings-layout': {
      id: '/_settings-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SettingsLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/connection/$connId': {
      id: '/connection/$connId'
      path: '/connection/$connId'
      fullPath: '/connection/$connId'
      preLoaderRoute: typeof ConnectionConnIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/connection/$connId/_table-layout': {
      id: '/connection/$connId/_table-layout'
      path: '/connection/$connId'
      fullPath: '/connection/$connId'
      preLoaderRoute: typeof ConnectionConnIdTableLayoutRouteImport
      parentRoute: typeof ConnectionConnIdRoute
    }
    '/_settings-layout/settings/preferences': {
      id: '/_settings-layout/settings/preferences'
      path: '/settings/preferences'
      fullPath: '/settings/preferences'
      preLoaderRoute: typeof SettingsLayoutSettingsPreferencesRouteRouteImport
      parentRoute: typeof SettingsLayoutRoute
    }
    '/_settings-layout/settings/keybindings': {
      id: '/_settings-layout/settings/keybindings'
      path: '/settings/keybindings'
      fullPath: '/settings/keybindings'
      preLoaderRoute: typeof SettingsLayoutSettingsKeybindingsRouteRouteImport
      parentRoute: typeof SettingsLayoutRoute
    }
    '/connection/$connId/_table-layout/sql-editor': {
      id: '/connection/$connId/_table-layout/sql-editor'
      path: '/sql-editor'
      fullPath: '/connection/$connId/sql-editor'
      preLoaderRoute: typeof ConnectionConnIdTableLayoutSqlEditorRouteRouteImport
      parentRoute: typeof ConnectionConnIdTableLayoutRoute
    }
    '/connection/$connId/_table-layout/api-docs': {
      id: '/connection/$connId/_table-layout/api-docs'
      path: '/api-docs'
      fullPath: '/connection/$connId/api-docs'
      preLoaderRoute: typeof ConnectionConnIdTableLayoutApiDocsRouteRouteImport
      parentRoute: typeof ConnectionConnIdTableLayoutRoute
    }
    '/connection/$connId/_table-layout/table-view/empty': {
      id: '/connection/$connId/_table-layout/table-view/empty'
      path: '/table-view/empty'
      fullPath: '/connection/$connId/table-view/empty'
      preLoaderRoute: typeof ConnectionConnIdTableLayoutTableViewEmptyRouteRouteImport
      parentRoute: typeof ConnectionConnIdTableLayoutRoute
    }
    '/connection/$connId/_table-layout/table-view/$tableName': {
      id: '/connection/$connId/_table-layout/table-view/$tableName'
      path: '/table-view/$tableName'
      fullPath: '/connection/$connId/table-view/$tableName'
      preLoaderRoute: typeof ConnectionConnIdTableLayoutTableViewTableNameRouteRouteImport
      parentRoute: typeof ConnectionConnIdTableLayoutRoute
    }
  }
}

interface SettingsLayoutRouteChildren {
  SettingsLayoutSettingsKeybindingsRouteRoute: typeof SettingsLayoutSettingsKeybindingsRouteRoute
  SettingsLayoutSettingsPreferencesRouteRoute: typeof SettingsLayoutSettingsPreferencesRouteRoute
}

const SettingsLayoutRouteChildren: SettingsLayoutRouteChildren = {
  SettingsLayoutSettingsKeybindingsRouteRoute:
    SettingsLayoutSettingsKeybindingsRouteRoute,
  SettingsLayoutSettingsPreferencesRouteRoute:
    SettingsLayoutSettingsPreferencesRouteRoute,
}

const SettingsLayoutRouteWithChildren = SettingsLayoutRoute._addFileChildren(
  SettingsLayoutRouteChildren,
)

interface ConnectionConnIdTableLayoutRouteChildren {
  ConnectionConnIdTableLayoutApiDocsRouteRoute: typeof ConnectionConnIdTableLayoutApiDocsRouteRoute
  ConnectionConnIdTableLayoutSqlEditorRouteRoute: typeof ConnectionConnIdTableLayoutSqlEditorRouteRoute
  ConnectionConnIdTableLayoutTableViewTableNameRouteRoute: typeof ConnectionConnIdTableLayoutTableViewTableNameRouteRoute
  ConnectionConnIdTableLayoutTableViewEmptyRouteRoute: typeof ConnectionConnIdTableLayoutTableViewEmptyRouteRoute
}

const ConnectionConnIdTableLayoutRouteChildren: ConnectionConnIdTableLayoutRouteChildren =
  {
    ConnectionConnIdTableLayoutApiDocsRouteRoute:
      ConnectionConnIdTableLayoutApiDocsRouteRoute,
    ConnectionConnIdTableLayoutSqlEditorRouteRoute:
      ConnectionConnIdTableLayoutSqlEditorRouteRoute,
    ConnectionConnIdTableLayoutTableViewTableNameRouteRoute:
      ConnectionConnIdTableLayoutTableViewTableNameRouteRoute,
    ConnectionConnIdTableLayoutTableViewEmptyRouteRoute:
      ConnectionConnIdTableLayoutTableViewEmptyRouteRoute,
  }

const ConnectionConnIdTableLayoutRouteWithChildren =
  ConnectionConnIdTableLayoutRoute._addFileChildren(
    ConnectionConnIdTableLayoutRouteChildren,
  )

interface ConnectionConnIdRouteChildren {
  ConnectionConnIdTableLayoutRoute: typeof ConnectionConnIdTableLayoutRouteWithChildren
}

const ConnectionConnIdRouteChildren: ConnectionConnIdRouteChildren = {
  ConnectionConnIdTableLayoutRoute:
    ConnectionConnIdTableLayoutRouteWithChildren,
}

const ConnectionConnIdRouteWithChildren =
  ConnectionConnIdRoute._addFileChildren(ConnectionConnIdRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRouteRoute: IndexRouteRoute,
  SettingsLayoutRoute: SettingsLayoutRouteWithChildren,
  ConnectionConnIdRoute: ConnectionConnIdRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
