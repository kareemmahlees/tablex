/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsLayoutImport } from './routes/_settings-layout'
import { Route as IndexRouteImport } from './routes/index/route'
import { Route as ConnectionConnIdTableLayoutImport } from './routes/connection.$connId/_table-layout'
import { Route as SettingsLayoutSettingsPreferencesRouteImport } from './routes/_settings-layout.settings/preferences/route'
import { Route as SettingsLayoutSettingsKeybindingsRouteImport } from './routes/_settings-layout.settings/keybindings/route'
import { Route as ConnectionConnIdTableLayoutUtilitiesRouteImport } from './routes/connection.$connId/_table-layout/utilities/route'
import { Route as ConnectionConnIdTableLayoutSqlEditorRouteImport } from './routes/connection.$connId/_table-layout/sql-editor/route'
import { Route as ConnectionConnIdTableLayoutTableViewEmptyRouteImport } from './routes/connection.$connId/_table-layout/table-view/empty/route'
import { Route as ConnectionConnIdTableLayoutTableViewTableNameRouteImport } from './routes/connection.$connId/_table-layout/table-view/$tableName/route'

// Create Virtual Routes

const ConnectionConnIdImport = createFileRoute('/connection/$connId')()

// Create/Update Routes

const SettingsLayoutRoute = SettingsLayoutImport.update({
  id: '/_settings-layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRouteRoute = IndexRouteImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ConnectionConnIdRoute = ConnectionConnIdImport.update({
  path: '/connection/$connId',
  getParentRoute: () => rootRoute,
} as any)

const ConnectionConnIdTableLayoutRoute =
  ConnectionConnIdTableLayoutImport.update({
    id: '/_table-layout',
    getParentRoute: () => ConnectionConnIdRoute,
  } as any)

const SettingsLayoutSettingsPreferencesRouteRoute =
  SettingsLayoutSettingsPreferencesRouteImport.update({
    path: '/settings/preferences',
    getParentRoute: () => SettingsLayoutRoute,
  } as any)

const SettingsLayoutSettingsKeybindingsRouteRoute =
  SettingsLayoutSettingsKeybindingsRouteImport.update({
    path: '/settings/keybindings',
    getParentRoute: () => SettingsLayoutRoute,
  } as any)

const ConnectionConnIdTableLayoutUtilitiesRouteRoute =
  ConnectionConnIdTableLayoutUtilitiesRouteImport.update({
    path: '/utilities',
    getParentRoute: () => ConnectionConnIdTableLayoutRoute,
  } as any)

const ConnectionConnIdTableLayoutSqlEditorRouteRoute =
  ConnectionConnIdTableLayoutSqlEditorRouteImport.update({
    path: '/sql-editor',
    getParentRoute: () => ConnectionConnIdTableLayoutRoute,
  } as any)

const ConnectionConnIdTableLayoutTableViewEmptyRouteRoute =
  ConnectionConnIdTableLayoutTableViewEmptyRouteImport.update({
    path: '/table-view/empty',
    getParentRoute: () => ConnectionConnIdTableLayoutRoute,
  } as any)

const ConnectionConnIdTableLayoutTableViewTableNameRouteRoute =
  ConnectionConnIdTableLayoutTableViewTableNameRouteImport.update({
    path: '/table-view/$tableName',
    getParentRoute: () => ConnectionConnIdTableLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/_settings-layout': {
      id: '/_settings-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SettingsLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_settings-layout/settings/keybindings': {
      id: '/_settings-layout/settings/keybindings'
      path: '/settings/keybindings'
      fullPath: '/settings/keybindings'
      preLoaderRoute: typeof SettingsLayoutSettingsKeybindingsRouteImport
      parentRoute: typeof SettingsLayoutImport
    }
    '/_settings-layout/settings/preferences': {
      id: '/_settings-layout/settings/preferences'
      path: '/settings/preferences'
      fullPath: '/settings/preferences'
      preLoaderRoute: typeof SettingsLayoutSettingsPreferencesRouteImport
      parentRoute: typeof SettingsLayoutImport
    }
    '/connection/$connId': {
      id: '/connection/$connId'
      path: '/connection/$connId'
      fullPath: '/connection/$connId'
      preLoaderRoute: typeof ConnectionConnIdImport
      parentRoute: typeof rootRoute
    }
    '/connection/$connId/_table-layout': {
      id: '/connection/$connId/_table-layout'
      path: '/connection/$connId'
      fullPath: '/connection/$connId'
      preLoaderRoute: typeof ConnectionConnIdTableLayoutImport
      parentRoute: typeof ConnectionConnIdRoute
    }
    '/connection/$connId/_table-layout/sql-editor': {
      id: '/connection/$connId/_table-layout/sql-editor'
      path: '/sql-editor'
      fullPath: '/connection/$connId/sql-editor'
      preLoaderRoute: typeof ConnectionConnIdTableLayoutSqlEditorRouteImport
      parentRoute: typeof ConnectionConnIdTableLayoutImport
    }
    '/connection/$connId/_table-layout/utilities': {
      id: '/connection/$connId/_table-layout/utilities'
      path: '/utilities'
      fullPath: '/connection/$connId/utilities'
      preLoaderRoute: typeof ConnectionConnIdTableLayoutUtilitiesRouteImport
      parentRoute: typeof ConnectionConnIdTableLayoutImport
    }
    '/connection/$connId/_table-layout/table-view/$tableName': {
      id: '/connection/$connId/_table-layout/table-view/$tableName'
      path: '/table-view/$tableName'
      fullPath: '/connection/$connId/table-view/$tableName'
      preLoaderRoute: typeof ConnectionConnIdTableLayoutTableViewTableNameRouteImport
      parentRoute: typeof ConnectionConnIdTableLayoutImport
    }
    '/connection/$connId/_table-layout/table-view/empty': {
      id: '/connection/$connId/_table-layout/table-view/empty'
      path: '/table-view/empty'
      fullPath: '/connection/$connId/table-view/empty'
      preLoaderRoute: typeof ConnectionConnIdTableLayoutTableViewEmptyRouteImport
      parentRoute: typeof ConnectionConnIdTableLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRouteRoute,
  SettingsLayoutRoute: SettingsLayoutRoute.addChildren({
    SettingsLayoutSettingsKeybindingsRouteRoute,
    SettingsLayoutSettingsPreferencesRouteRoute,
  }),
  ConnectionConnIdRoute: ConnectionConnIdRoute.addChildren({
    ConnectionConnIdTableLayoutRoute:
      ConnectionConnIdTableLayoutRoute.addChildren({
        ConnectionConnIdTableLayoutSqlEditorRouteRoute,
        ConnectionConnIdTableLayoutUtilitiesRouteRoute,
        ConnectionConnIdTableLayoutTableViewTableNameRouteRoute,
        ConnectionConnIdTableLayoutTableViewEmptyRouteRoute,
      }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_settings-layout",
        "/connection/$connId"
      ]
    },
    "/": {
      "filePath": "index/route.tsx"
    },
    "/_settings-layout": {
      "filePath": "_settings-layout.tsx",
      "children": [
        "/_settings-layout/settings/keybindings",
        "/_settings-layout/settings/preferences"
      ]
    },
    "/_settings-layout/settings/keybindings": {
      "filePath": "_settings-layout.settings/keybindings/route.tsx",
      "parent": "/_settings-layout"
    },
    "/_settings-layout/settings/preferences": {
      "filePath": "_settings-layout.settings/preferences/route.tsx",
      "parent": "/_settings-layout"
    },
    "/connection/$connId": {
      "filePath": "connection.$connId",
      "children": [
        "/connection/$connId/_table-layout"
      ]
    },
    "/connection/$connId/_table-layout": {
      "filePath": "connection.$connId/_table-layout.tsx",
      "parent": "/connection/$connId",
      "children": [
        "/connection/$connId/_table-layout/sql-editor",
        "/connection/$connId/_table-layout/utilities",
        "/connection/$connId/_table-layout/table-view/$tableName",
        "/connection/$connId/_table-layout/table-view/empty"
      ]
    },
    "/connection/$connId/_table-layout/sql-editor": {
      "filePath": "connection.$connId/_table-layout/sql-editor/route.tsx",
      "parent": "/connection/$connId/_table-layout"
    },
    "/connection/$connId/_table-layout/utilities": {
      "filePath": "connection.$connId/_table-layout/utilities/route.tsx",
      "parent": "/connection/$connId/_table-layout"
    },
    "/connection/$connId/_table-layout/table-view/$tableName": {
      "filePath": "connection.$connId/_table-layout/table-view/$tableName/route.tsx",
      "parent": "/connection/$connId/_table-layout"
    },
    "/connection/$connId/_table-layout/table-view/empty": {
      "filePath": "connection.$connId/_table-layout/table-view/empty/route.tsx",
      "parent": "/connection/$connId/_table-layout"
    }
  }
}
ROUTE_MANIFEST_END */
