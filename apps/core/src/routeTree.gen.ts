/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ConnectionsRouteImport } from './routes/connections/route'
import { Route as ConnectRouteImport } from './routes/connect/route'
import { Route as IndexRouteImport } from './routes/index/route'
import { Route as DashboardLayoutImport } from './routes/dashboard/_layout'
import { Route as DashboardLayoutConnectionLandRouteImport } from './routes/dashboard/_layout/connection/land/route'
import { Route as DashboardLayoutConnectionTableNameRouteImport } from './routes/dashboard/_layout/connection/$tableName/route'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const ConnectionsRouteRoute = ConnectionsRouteImport.update({
  path: '/connections',
  getParentRoute: () => rootRoute,
} as any)

const ConnectRouteRoute = ConnectRouteImport.update({
  path: '/connect',
  getParentRoute: () => rootRoute,
} as any)

const IndexRouteRoute = IndexRouteImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardLayoutConnectionLandRouteRoute =
  DashboardLayoutConnectionLandRouteImport.update({
    path: '/connection/land',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutConnectionTableNameRouteRoute =
  DashboardLayoutConnectionTableNameRouteImport.update({
    path: '/connection/$tableName',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/connect': {
      id: '/connect'
      path: '/connect'
      fullPath: '/connect'
      preLoaderRoute: typeof ConnectRouteImport
      parentRoute: typeof rootRoute
    }
    '/connections': {
      id: '/connections'
      path: '/connections'
      fullPath: '/connections'
      preLoaderRoute: typeof ConnectionsRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_layout': {
      id: '/dashboard/_layout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/_layout/connection/$tableName': {
      id: '/dashboard/_layout/connection/$tableName'
      path: '/connection/$tableName'
      fullPath: '/dashboard/connection/$tableName'
      preLoaderRoute: typeof DashboardLayoutConnectionTableNameRouteImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/connection/land': {
      id: '/dashboard/_layout/connection/land'
      path: '/connection/land'
      fullPath: '/dashboard/connection/land'
      preLoaderRoute: typeof DashboardLayoutConnectionLandRouteImport
      parentRoute: typeof DashboardLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRouteRoute,
  ConnectRouteRoute,
  ConnectionsRouteRoute,
  DashboardRoute: DashboardRoute.addChildren({
    DashboardLayoutRoute: DashboardLayoutRoute.addChildren({
      DashboardLayoutConnectionTableNameRouteRoute,
      DashboardLayoutConnectionLandRouteRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/connect",
        "/connections",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index/route.tsx"
    },
    "/connect": {
      "filePath": "connect/route.tsx"
    },
    "/connections": {
      "filePath": "connections/route.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_layout"
      ]
    },
    "/dashboard/_layout": {
      "filePath": "dashboard/_layout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_layout/connection/$tableName",
        "/dashboard/_layout/connection/land"
      ]
    },
    "/dashboard/_layout/connection/$tableName": {
      "filePath": "dashboard/_layout/connection/$tableName/route.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/connection/land": {
      "filePath": "dashboard/_layout/connection/land/route.tsx",
      "parent": "/dashboard/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
